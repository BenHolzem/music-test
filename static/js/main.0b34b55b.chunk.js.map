{"version":3,"sources":["components/ArtistGame.js","components/SongGame.js","components/Home.js","components/Redirect.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["leftArtistIndex","rightArtistIndex","leftSongIndex","rightSongIndex","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","handleLogin","window","location","Home","props","state","this","classes","className","root","title","text","onClick","button","React","Component","withStyles","height","flexDirection","justifyContent","display","marginLeft","marginRight","marginBottom","color","fontFamily","fontSize","backgroundColor","border","width","borderRadius","transition","Redirect","setExpiryTime","history","_","isEmpty","hash","push","access_token","slice","split","reduce","prev","curr","value","expiryTime","Date","getTime","expires_in","localStorage","setItem","JSON","stringify","error","choices","battleNo","tiedDataList","recordDataList","pointer","leftIndex","rightIndex","rightInnerIndex","leftInnerIndex","sortedIndexList","parentIndexList","sortedNo","totalBattles","dataToSort","finalArtists","percent","ArtistGame","start","map","a","Math","random","sort","b","val","idx","midpoint","marker","i","length","parent","ceil","setState","leftArtist","rightArtist","play","pick","choice","recordData","leftListLen","rightListLen","pop","forEach","result","floor","chioce","rankNum","tiedRankNum","finalSortedIndexes","artistIndex","artist","rank","name","img","images","artistList","index","score","params","parse","getItem","gameType","fetch","headers","then","response","json","data","array","items","setTimeout","bind","main","container","section","image","style","backgroundImage","url","backgroundSize","progressContainer","progressBar","bar","progressText","resultContainer","listContainer","resultTitle","obj","artistContainer","artistImage","resetGame","position","boxShadow","margin","alignItems","marginTop","textAlign","finalSongs","SongGame","leftSong","rightSong","songIndex","song","album","songList","console","log","songContainer","songImage","minHeight","minWidth","maxWidth","Dashboard","isValidSession","currentTime","isSessionValid","chooseGame","type","gameStart","topArtist","topTrack","gameTitle","artistgame","bottom","right","flex","padding","flexWrap","left","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b34b55b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\nimport transitions from '@material-ui/core/styles/transitions';\r\n\r\nlet choices = ''\r\nlet battleNo = 0\r\nlet tiedDataList = []\r\nlet recordDataList = []\r\nlet pointer = 0\r\nlet leftIndex = 0\r\nlet rightIndex = 0\r\nlet rightInnerIndex = 0\r\nlet leftInnerIndex = 0\r\nlet sortedIndexList = []\r\nlet parentIndexList = []\r\nlet sortedNo = 0\r\nlet totalBattles = 0\r\nlet dataToSort = []\r\nlet leftArtistIndex\r\nlet rightArtistIndex\r\nlet finalArtists = []\r\nlet percent = 0\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    height: 'inherit',\r\n    color: '#8996A9'\r\n  },\r\n  title: {\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '40px',\r\n    marginBottom: '50px',\r\n    marginLeft: '20px',\r\n    marginRight: '20px',\r\n    '@media only screen and (max-width:960px)': {\r\n      marginBottom: '20px',\r\n      fontSize: '35px'\r\n    }\r\n  },\r\n  image: {\r\n    borderRadius: '50%',\r\n    height: '300px',\r\n    width: '300px',\r\n    position: 'relative',\r\n    transition: '.2s',\r\n    marginLeft: '50px',\r\n    marginRight: '50px',\r\n    '&:hover' : {\r\n      boxShadow: 'inset 0 0 0 1000px rgba(256,256,256,.1)'\r\n    },\r\n    '@media only screen and (max-width:960px)': {\r\n      height: '200px',\r\n      width: '200px',\r\n      marginLeft: '0px',\r\n      marginRight: '0px',\r\n    }\r\n  },\r\n  section: {\r\n    margin: '0px',    \r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    '@media only screen and (max-width:960px)': {\r\n      flexDirection: 'column',\r\n    }\r\n  },\r\n  main: {\r\n    height: 'inherit',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n  },\r\n  name: {\r\n    marginTop:'15px',\r\n    marginBottom: '15px',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '25px'\r\n  },\r\n  artistContainer: {\r\n    width: '400px',\r\n    height: '70px',\r\n    backgroundColor: 'white', \r\n    margin: '5px',\r\n    borderRadius: '5px',\r\n    display: 'flex', \r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontFamily: 'GothamMedium',\r\n    textAlign: 'left',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '175px',\r\n      height: '50px', \r\n      fontSize: '12px'   \r\n    },\r\n  },\r\n  listContainer: {\r\n\r\n  },\r\n  resultContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    '@media only screen and (max-width:960px)': {\r\n      flexDirection: 'row',\r\n      alignItems: 'center'\r\n    }\r\n  },\r\n  artistImage: {\r\n    height: '55px',\r\n    width: '55px',\r\n    borderRadius: '50px',\r\n    margin: '10px',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '35px',\r\n      height: '35px',    \r\n    },\r\n    \r\n  },\r\n  resultTitle: {\r\n    marginTop: '25px',\r\n    marginBottom: '15px',\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium', \r\n    fontSize: '20px'\r\n  },\r\n  button: {\r\n    backgroundColor: '#f03a47',\r\n    border: 'none',\r\n    height: '50px',\r\n    width: '150px',\r\n    borderRadius: '500px',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '20px',\r\n    color: '#e8ebed',\r\n    transition: '.3s',\r\n    marginTop: '15px',\r\n    marginBottom: '25px',\r\n    \"&:hover\": {\r\n        backgroundColor: '#f46771'\r\n    },\r\n    \"&:focus\": {\r\n        backgroundColor: '#bf2e38'\r\n    }\r\n  },\r\n  progressContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    marginTop: '30px',\r\n    '@media only screen and (max-width:960px)': {\r\n      marginTop: '15px',\r\n    }\r\n  },\r\n  progressBar: {\r\n    width: '400px',\r\n    height: '40px',\r\n    backgroundColor: 'white',\r\n    borderRadius: '5px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '350px',\r\n    }\r\n  },\r\n  bar: {\r\n    height: '35px',\r\n    backgroundColor: '#20cbb8',\r\n    borderRadius: '5px',\r\n    marginLeft: '3px'\r\n  }, \r\n  progressText: {\r\n    position: 'absolute',\r\n    marginLeft: '150px',\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium',\r\n    '@media only screen and (max-width:960px)': {\r\n      marginLeft: '125px',\r\n    }\r\n  }\r\n})\r\n\r\nclass ArtistGame extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      artistList: [],\r\n      index: 0,\r\n      score: 0,\r\n      play: 'before',\r\n      leftArtist: {\r\n        name: '',\r\n        images: []\r\n      },\r\n      rightArtist: {\r\n        name: '',\r\n        images: []\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const params = JSON.parse(localStorage.getItem('params'))\r\n    const {gameType} = this.props\r\n    fetch(`https://api.spotify.com/v1/me/top/artists?time_range=${gameType}&limit=50&offset=0`, {\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${params.access_token}`\r\n        },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      let array = data.items.map(({name, images}) => ({name, images}));\r\n\r\n      this.setState({artistList: array})\r\n      dataToSort = array\r\n    });\r\n\r\n    setTimeout(function() { this.start() }.bind(this), 300)\r\n\r\n  }\r\n\r\n  start = () => {\r\n    finalArtists = []\r\n    percent = 0\r\n    dataToSort = dataToSort\r\n      .map(a => [Math.random(), a])\r\n      .sort((a,b) => a[0] - b[0])\r\n      .map(a => a[1]);\r\n\r\n\r\n    recordDataList = dataToSort.map(() => 0);\r\n    tiedDataList = dataToSort.map(() => -1)\r\n  \r\n    sortedIndexList[0] = dataToSort.map((val, idx) => idx)\r\n    parentIndexList[0] = -1\r\n  \r\n    let midpoint = 0\r\n    let marker = 1\r\n  \r\n    for (let i = 0; i < sortedIndexList.length; i++) {\r\n      if (sortedIndexList[i].length > 1) {\r\n        let parent = sortedIndexList[i]\r\n        midpoint = Math.ceil(parent.length / 2)\r\n  \r\n        sortedIndexList[marker] = parent.slice(0, midpoint)\r\n        totalBattles += sortedIndexList[marker].length\r\n        parentIndexList[marker] = i\r\n        marker++\r\n  \r\n        sortedIndexList[marker] = parent.slice(midpoint, parent.length)\r\n        totalBattles += sortedIndexList[marker].length\r\n        parentIndexList[marker] = i\r\n        marker++\r\n      }\r\n    }\r\n  \r\n    leftIndex = sortedIndexList.length - 2\r\n    rightIndex = sortedIndexList.length - 1\r\n  \r\n    leftInnerIndex = 0\r\n    rightInnerIndex = 0\r\n\r\n    leftArtistIndex = sortedIndexList[leftIndex][leftInnerIndex];\r\n    rightArtistIndex = sortedIndexList[rightIndex][rightInnerIndex];\r\n    this.setState({leftArtist: dataToSort[leftArtistIndex]});\r\n    this.setState({rightArtist: dataToSort[rightArtistIndex]});\r\n    this.setState({play: 'play'})\r\n  }\r\n\r\n\r\n  pick = (choice) => {\r\n    switch (choice) {\r\n      case 'left': {\r\n        if (choices.length === battleNo - 1) {\r\n          this.setState({choices: choices += '0'})\r\n        }\r\n        this.recordData('left')\r\n        while(tiedDataList[recordDataList[pointer - 1]] !== -1) {\r\n          this.recordData('left')\r\n        }\r\n        break\r\n      } \r\n      case 'right': {\r\n        if (choices.length === battleNo - 1) {\r\n          choices += '1'\r\n        }\r\n        this.recordData('right')\r\n        while (tiedDataList[recordDataList[pointer - 1]] !== -1) {\r\n          this.recordData('right')\r\n        }\r\n        break\r\n      }\r\n      default: {\r\n        break\r\n      }\r\n    }\r\n\r\n    const leftListLen = sortedIndexList[leftIndex].length\r\n    const rightListLen = sortedIndexList[rightIndex].length\r\n\r\n    if (leftInnerIndex < leftListLen && rightInnerIndex === rightListLen) {\r\n      while (leftInnerIndex < leftListLen) {\r\n        this.recordData('left')\r\n      }\r\n    } else if (leftInnerIndex === leftListLen && rightInnerIndex < rightListLen) {\r\n      while (rightInnerIndex < rightListLen) {\r\n        this.recordData('right')\r\n      }\r\n    }\r\n\r\n    if (leftInnerIndex === leftListLen && rightInnerIndex === rightListLen) {\r\n      for (let i = 0; i < leftListLen + rightListLen; i++) {\r\n        sortedIndexList[parentIndexList[leftIndex]][i] = recordDataList[i]\r\n      }\r\n      sortedIndexList.pop()\r\n      sortedIndexList.pop()\r\n      leftIndex = leftIndex - 2\r\n      rightIndex = rightIndex - 2\r\n      leftInnerIndex = 0\r\n      rightInnerIndex = 0\r\n  \r\n      sortedIndexList.forEach((val, idx) => recordDataList[idx] = 0)\r\n      pointer = 0;\r\n    }\r\n\r\n    if (leftIndex < 0) {\r\n      percent = 100\r\n      this.result()\r\n    } else {\r\n      leftArtistIndex = sortedIndexList[leftIndex][leftInnerIndex]\r\n      rightArtistIndex = sortedIndexList[rightIndex][rightInnerIndex]\r\n      this.setState({leftArtist: dataToSort[leftArtistIndex]})\r\n      this.setState({rightArtist: dataToSort[rightArtistIndex]})\r\n      percent = Math.floor(sortedNo * 100 / totalBattles)\r\n      battleNo++\r\n    }\r\n  }\r\n\r\n  recordData = (chioce) => {\r\n    if (chioce === 'left') {\r\n      recordDataList[pointer] = sortedIndexList[leftIndex][leftInnerIndex]\r\n      leftInnerIndex++\r\n    } else {\r\n      recordDataList[pointer] = sortedIndexList[rightIndex][rightInnerIndex]\r\n      rightInnerIndex++\r\n    }\r\n    \r\n    pointer++\r\n    sortedNo++\r\n  }\r\n  \r\n  result = () => {\r\n    let rankNum = 1;\r\n    let tiedRankNum = 1;\r\n\r\n    const finalSortedIndexes = sortedIndexList[0].slice(0);\r\n\r\n    dataToSort.forEach((val, idx) => {\r\n      const artistIndex = finalSortedIndexes[idx];\r\n      const artist = dataToSort[artistIndex];\r\n\r\n      finalArtists.push({ rank: rankNum, name: artist.name, img: artist.images });\r\n\r\n      if (idx < dataToSort.length - 1) {\r\n        if (tiedDataList[artistIndex] === finalSortedIndexes[idx + 1]) {\r\n          tiedRankNum++\r\n        } else {\r\n          rankNum += tiedRankNum\r\n          tiedRankNum = 1\r\n        }\r\n      }\r\n    })\r\n\r\n    this.setState({play: 'done'})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { leftArtist, rightArtist, play, artistList } = this.state\r\n    const { classes = {} } = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        { \r\n          play === 'before' &&\r\n          <div/>\r\n        }\r\n        {\r\n          play === 'play' &&\r\n          <div className={classes.main}>\r\n            <div className={classes.title}>Who do you listen to more?</div>\r\n            <div className={classes.container}>\r\n              <div className={classes.section}>\r\n                <div className={classes.image} \r\n                  style={leftArtist.images.length != 0 ? {backgroundImage: `url('${leftArtist.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}\r\n                  onClick={() => this.pick('left')}>\r\n                </div>\r\n                <div className={classes.name}>{leftArtist.name}</div>\r\n              </div>\r\n              <div className={classes.section}>\r\n                <div className={classes.image} \r\n                  style={rightArtist.images.length != 0 ? {backgroundImage: `url('${rightArtist.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}\r\n                  onClick={() => this.pick('right')}>\r\n                </div>\r\n                <div className={classes.name}>{rightArtist.name}</div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressContainer}>\r\n              <div className={classes.progressBar}>\r\n                <div className={classes.bar} style={{width: `${percent}%`}}></div>\r\n                <div className={classes.progressText}>Progress: {percent}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {\r\n          play === 'done'  &&\r\n          <div>\r\n          <div className={classes.resultContainer}>\r\n            <div className={classes.listContainer}>\r\n              <div className={classes.resultTitle}>Your Ranking</div>\r\n              {finalArtists.map((obj, index) => (\r\n                <div className={classes.artistContainer}> \r\n                  <div className={classes.artistImage} \r\n                  style={obj.img.length != 0 ? {backgroundImage: `url('${obj.img[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}>\r\n                  </div>\r\n                  {obj.name}\r\n                </div>\r\n              ))\r\n            }</div>\r\n            <div className={classes.listContainer}>\r\n              <div className={classes.resultTitle}>Actual Ranking</div>\r\n              {artistList.map((obj, index) => (\r\n                <div className={classes.artistContainer}> \r\n                  <div className={classes.artistImage} \r\n                  style={obj.images.length != 0 ? {backgroundImage: `url('${obj.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}>\r\n                  </div>\r\n                  {obj.name}\r\n                </div>\r\n              ))\r\n            }</div>\r\n          </div>\r\n          <button className={classes.button} onClick={this.props.resetGame}>Home</button>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nArtistGame.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(ArtistGame)","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\nimport transitions from '@material-ui/core/styles/transitions';\r\n\r\nlet choices = ''\r\nlet battleNo = 0\r\nlet tiedDataList = []\r\nlet recordDataList = []\r\nlet pointer = 0\r\nlet leftIndex = 0\r\nlet rightIndex = 0\r\nlet rightInnerIndex = 0\r\nlet leftInnerIndex = 0\r\nlet sortedIndexList = []\r\nlet parentIndexList = []\r\nlet sortedNo = 0\r\nlet totalBattles = 0\r\nlet dataToSort = []\r\nlet leftSongIndex\r\nlet rightSongIndex\r\nlet finalSongs = []\r\nlet percent = 0\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    height: 'inherit',\r\n    color: '#8996A9'\r\n  },\r\n  title: {\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '40px',\r\n    marginBottom: '50px',\r\n    marginLeft: '20px',\r\n    marginRight: '20px',\r\n    '@media only screen and (max-width:960px)': {\r\n      marginBottom: '20px',\r\n      fontSize: '25px'\r\n    }\r\n  },\r\n  image: {\r\n    borderRadius: '50%',\r\n    height: '300px',\r\n    width: '300px',\r\n    minHeight: '300px',\r\n    minWidth: '300px',\r\n    position: 'relative',\r\n    transition: '.2s',\r\n    marginLeft: '50px',\r\n    marginRight: '50px',\r\n    '&:hover' : {\r\n      boxShadow: 'inset 0 0 0 1000px rgba(256,256,256,.1)'\r\n    },\r\n    '@media only screen and (max-width:960px)': {\r\n      height: '200px',\r\n      width: '200px',\r\n      minHeight: '200px',\r\n      minWidth: '200px',  \r\n      marginLeft: '0px',\r\n      marginRight: '0px',\r\n    }\r\n  },\r\n  section: {\r\n    margin: '0px',    \r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n    height: '425px',\r\n    '@media only screen and (max-width:960px)': {\r\n      height: '320px',\r\n    }\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    justifyContent: 'space-evenly',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    '@media only screen and (max-width:960px)': {\r\n      flexDirection: 'column',\r\n    }\r\n  },\r\n  main: {\r\n    height: 'inherit',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n  },\r\n  name: {\r\n    marginTop:'15px',\r\n    marginBottom: '15px',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '25px',\r\n    maxWidth: '300px'\r\n  },\r\n  songContainer: {\r\n    width: '400px',\r\n    height: '70px',\r\n    backgroundColor: 'white', \r\n    margin: '5px',\r\n    borderRadius: '5px',\r\n    display: 'flex', \r\n    alignItems: 'center',\r\n    fontSize: '20px',\r\n    fontFamily: 'GothamMedium',\r\n    textAlign: 'left',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '175px',\r\n      height: '50px', \r\n      fontSize: '10px'   \r\n    },\r\n  },\r\n  listContainer: {\r\n\r\n  },\r\n  resultContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    '@media only screen and (max-width:960px)': {\r\n      flexDirection: 'row',\r\n      alignItems: 'center'\r\n    }\r\n  },\r\n  songImage: {\r\n    height: '55px',\r\n    width: '55px',\r\n    minWidth: '55px',\r\n    borderRadius: '50px',\r\n    margin: '10px',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '35px',\r\n      height: '35px', \r\n      minWidth: '35px',   \r\n    },\r\n    \r\n  },\r\n  resultTitle: {\r\n    marginTop: '25px',\r\n    marginBottom: '15px',\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium', \r\n    fontSize: '20px'\r\n  },\r\n  button: {\r\n    backgroundColor: '#f03a47',\r\n    border: 'none',\r\n    height: '50px',\r\n    width: '150px',\r\n    borderRadius: '500px',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '20px',\r\n    color: '#e8ebed',\r\n    transition: '.3s',\r\n    marginTop: '15px',\r\n    marginBottom: '25px',\r\n    \"&:hover\": {\r\n        backgroundColor: '#f46771'\r\n    },\r\n    \"&:focus\": {\r\n        backgroundColor: '#bf2e38'\r\n    }\r\n  },\r\n  progressContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n  },\r\n  progressBar: {\r\n    width: '400px',\r\n    height: '40px',\r\n    backgroundColor: 'white',\r\n    borderRadius: '5px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    '@media only screen and (max-width:960px)': {\r\n      width: '350px',\r\n    }\r\n  },\r\n  bar: {\r\n    height: '35px',\r\n    backgroundColor: '#20cbb8',\r\n    borderRadius: '5px',\r\n    marginLeft: '3px'\r\n  }, \r\n  progressText: {\r\n    position: 'absolute',\r\n    marginLeft: '150px',\r\n    color: '#8996A9',\r\n    fontFamily: 'GothamMedium',\r\n    '@media only screen and (max-width:960px)': {\r\n      marginLeft: '125px',\r\n    }\r\n  },\r\n})\r\n\r\nclass SongGame extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      songList: [],\r\n      index: 0,\r\n      score: 0,\r\n      play: 'before',\r\n      leftSong: {\r\n        name: '',\r\n        images: []\r\n      },\r\n      rightSong: {\r\n        name: '',\r\n        images: []\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const params = JSON.parse(localStorage.getItem('params'))\r\n    const {gameType} = this.props\r\n    fetch(`https://api.spotify.com/v1/me/top/tracks?time_range=${gameType}&limit=50&offset=0`, {\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${params.access_token}`\r\n        },\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data)\r\n      let array = data.items.map(({album, name}) => ({album, name}));\r\n\r\n      this.setState({songList: array})\r\n      dataToSort = array\r\n      console.log(dataToSort)\r\n    });\r\n\r\n    setTimeout(function() { this.start() }.bind(this), 300)\r\n\r\n  }\r\n\r\n  start = () => {\r\n    finalSongs = []\r\n    percent = 0\r\n    dataToSort = dataToSort\r\n      .map(a => [Math.random(), a])\r\n      .sort((a,b) => a[0] - b[0])\r\n      .map(a => a[1]);\r\n\r\n\r\n    recordDataList = dataToSort.map(() => 0);\r\n    tiedDataList = dataToSort.map(() => -1)\r\n  \r\n    sortedIndexList[0] = dataToSort.map((val, idx) => idx)\r\n    parentIndexList[0] = -1\r\n  \r\n    let midpoint = 0\r\n    let marker = 1\r\n  \r\n    for (let i = 0; i < sortedIndexList.length; i++) {\r\n      if (sortedIndexList[i].length > 1) {\r\n        let parent = sortedIndexList[i]\r\n        midpoint = Math.ceil(parent.length / 2)\r\n  \r\n        sortedIndexList[marker] = parent.slice(0, midpoint)\r\n        totalBattles += sortedIndexList[marker].length\r\n        parentIndexList[marker] = i\r\n        marker++\r\n  \r\n        sortedIndexList[marker] = parent.slice(midpoint, parent.length)\r\n        totalBattles += sortedIndexList[marker].length\r\n        parentIndexList[marker] = i\r\n        marker++\r\n      }\r\n    }\r\n  \r\n    leftIndex = sortedIndexList.length - 2\r\n    rightIndex = sortedIndexList.length - 1\r\n  \r\n    leftInnerIndex = 0\r\n    rightInnerIndex = 0\r\n\r\n    leftSongIndex = sortedIndexList[leftIndex][leftInnerIndex];\r\n    rightSongIndex = sortedIndexList[rightIndex][rightInnerIndex];\r\n    this.setState({leftSong: dataToSort[leftSongIndex]});\r\n    this.setState({rightSong: dataToSort[rightSongIndex]});\r\n    this.setState({play: 'play'})\r\n  }\r\n\r\n\r\n  pick = (choice) => {\r\n    switch (choice) {\r\n      case 'left': {\r\n        if (choices.length === battleNo - 1) {\r\n          this.setState({choices: choices += '0'})\r\n        }\r\n        this.recordData('left')\r\n        while(tiedDataList[recordDataList[pointer - 1]] !== -1) {\r\n          this.recordData('left')\r\n        }\r\n        break\r\n      } \r\n      case 'right': {\r\n        if (choices.length === battleNo - 1) {\r\n          choices += '1'\r\n        }\r\n        this.recordData('right')\r\n        while (tiedDataList[recordDataList[pointer - 1]] !== -1) {\r\n          this.recordData('right')\r\n        }\r\n        break\r\n      }\r\n      default: {\r\n        break\r\n      }\r\n    }\r\n\r\n    const leftListLen = sortedIndexList[leftIndex].length\r\n    const rightListLen = sortedIndexList[rightIndex].length\r\n\r\n    if (leftInnerIndex < leftListLen && rightInnerIndex === rightListLen) {\r\n      while (leftInnerIndex < leftListLen) {\r\n        this.recordData('left')\r\n      }\r\n    } else if (leftInnerIndex === leftListLen && rightInnerIndex < rightListLen) {\r\n      while (rightInnerIndex < rightListLen) {\r\n        this.recordData('right')\r\n      }\r\n    }\r\n\r\n    if (leftInnerIndex === leftListLen && rightInnerIndex === rightListLen) {\r\n      for (let i = 0; i < leftListLen + rightListLen; i++) {\r\n        sortedIndexList[parentIndexList[leftIndex]][i] = recordDataList[i]\r\n      }\r\n      sortedIndexList.pop()\r\n      sortedIndexList.pop()\r\n      leftIndex = leftIndex - 2\r\n      rightIndex = rightIndex - 2\r\n      leftInnerIndex = 0\r\n      rightInnerIndex = 0\r\n  \r\n      sortedIndexList.forEach((val, idx) => recordDataList[idx] = 0)\r\n      pointer = 0;\r\n    }\r\n\r\n    if (leftIndex < 0) {\r\n      percent = 100\r\n      this.result()\r\n    } else {\r\n      leftSongIndex = sortedIndexList[leftIndex][leftInnerIndex]\r\n      rightSongIndex = sortedIndexList[rightIndex][rightInnerIndex]\r\n      this.setState({leftSong: dataToSort[leftSongIndex]})\r\n      this.setState({rightSong: dataToSort[rightSongIndex]})\r\n      percent = Math.floor(sortedNo * 100 / totalBattles)\r\n      battleNo++\r\n    }\r\n  }\r\n\r\n  recordData = (chioce) => {\r\n    if (chioce === 'left') {\r\n      recordDataList[pointer] = sortedIndexList[leftIndex][leftInnerIndex]\r\n      leftInnerIndex++\r\n    } else {\r\n      recordDataList[pointer] = sortedIndexList[rightIndex][rightInnerIndex]\r\n      rightInnerIndex++\r\n    }\r\n    \r\n    pointer++\r\n    sortedNo++\r\n  }\r\n  \r\n  result = () => {\r\n    let rankNum = 1;\r\n    let tiedRankNum = 1;\r\n\r\n    const finalSortedIndexes = sortedIndexList[0].slice(0);\r\n\r\n    dataToSort.forEach((val, idx) => {\r\n      const songIndex = finalSortedIndexes[idx];\r\n      const song = dataToSort[songIndex];\r\n\r\n      finalSongs.push({ rank: rankNum, name: song.name, img: song.album.images });\r\n\r\n      if (idx < dataToSort.length - 1) {\r\n        if (tiedDataList[songIndex] === finalSortedIndexes[idx + 1]) {\r\n          tiedRankNum++\r\n        } else {\r\n          rankNum += tiedRankNum\r\n          tiedRankNum = 1\r\n        }\r\n      }\r\n    })\r\n    this.setState({play: 'done'})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { leftSong, rightSong, play, songList } = this.state\r\n    const { classes = {} } = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        { \r\n          play === 'before' &&\r\n          <div/>\r\n        }\r\n        {\r\n          play === 'play' &&\r\n          <div className={classes.main}>\r\n            <div className={classes.title}>Which song did you listen to more?</div>\r\n            <div className={classes.container}>\r\n              <div className={classes.section}>\r\n                <div className={classes.image} \r\n                  style={leftSong.album.images.length != 0 ? {backgroundImage: `url('${leftSong.album.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}\r\n                  onClick={() => this.pick('left')}>\r\n                </div>\r\n                <div className={classes.name}>{leftSong.name}</div>\r\n              </div>\r\n              <div className={classes.section}>\r\n                <div className={classes.image} \r\n                  style={rightSong.album.images.length != 0 ? {backgroundImage: `url('${rightSong.album.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}\r\n                  onClick={() => this.pick('right')}>\r\n                </div>\r\n                <div className={classes.name}>{rightSong.name}</div>\r\n              </div>\r\n            </div>\r\n            <div className={classes.progressContainer}>\r\n              <div className={classes.progressBar}>\r\n                <div className={classes.bar} style={{width: `${percent}%`}}></div>\r\n                <div className={classes.progressText}>Progress: {percent}%</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        {\r\n          play === 'done'  &&\r\n          <div>\r\n          <div className={classes.resultContainer}>\r\n            <div className={classes.listContainer}>\r\n              <div className={classes.resultTitle}>Your Ranking</div>\r\n              {finalSongs.map((obj, index) => (\r\n                <div className={classes.songContainer}> \r\n                  <div className={classes.songImage} \r\n                  style={obj.img.length != 0 ? {backgroundImage: `url('${obj.img[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}>\r\n                  </div>\r\n                  <div>{obj.name}</div>\r\n                </div>\r\n              ))\r\n            }</div>\r\n            <div className={classes.listContainer}>\r\n              <div className={classes.resultTitle}>Actual Ranking</div>\r\n              {songList.map((obj, index) => (\r\n                <div className={classes.songContainer}> \r\n                  <div className={classes.songImage} \r\n                  style={obj.album.images.length != 0 ? {backgroundImage: `url('${obj.album.images[0].url}')`, backgroundSize: 'cover'} : {backgroundColor: '#8996A9'}}>\r\n                  </div>\r\n                  <div>{obj.name}</div>\r\n                </div>\r\n              ))\r\n            }</div>\r\n          </div>\r\n          <button className={classes.button} onClick={this.props.resetGame}>Home</button>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSongGame.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(SongGame)","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {\r\n    REACT_APP_CLIENT_ID,\r\n    REACT_APP_AUTHORIZE_URL,\r\n    REACT_APP_REDIRECT_URL\r\n  } = process.env;\r\n  \r\nconst handleLogin = () => {\r\n    window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true&scope=user-top-read`;\r\n  };\r\n\r\nconst styles = () => ({\r\n    root: {\r\n        height: 'inherit'\r\n    },\r\n    title: {\r\n        height: 'inherit',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        marginLeft: '50px',\r\n        marginRight: '50px',\r\n        marginBottom: '25px',\r\n        color: '#8996A9',\r\n        fontFamily: 'GothamMedium',\r\n        fontSize: '35px'\r\n    },\r\n    button: {\r\n        backgroundColor: '#f03a47',\r\n        border: 'none',\r\n        height: '50px',\r\n        width: '150px',\r\n        borderRadius: '500px',\r\n        fontFamily: 'GothamMedium',\r\n        fontSize: '20px',\r\n        color: '#e8ebed',\r\n        transition: '.3s',\r\n        \"&:hover\": {\r\n            backgroundColor: '#f46771'\r\n        },\r\n        \"&:focus\": {\r\n            backgroundColor: '#bf2e38'\r\n        }\r\n    },\r\n    text: {\r\n        marginBottom: '25px'\r\n    }\r\n})\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { classes = {} } = this.props\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.title}>\r\n                    <div className={classes.text}>How well do you know your music taste?</div>\r\n                    <div><button onClick={handleLogin} className={classes.button}>Play</button></div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(Home)\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst getParamValues = (url) => {\r\n    return url\r\n      .slice(1)\r\n      .split('&')\r\n      .reduce((prev, curr) => {\r\n        const [title, value] = curr.split('=');\r\n        prev[title] = value;\r\n        return prev;\r\n      }, {});\r\n  };\r\n  \r\n\r\nexport default class Redirect extends React.Component {\r\n  componentDidMount() {\r\n    const { setExpiryTime, history, location } = this.props;\r\n    try {\r\n      if (_.isEmpty(location.hash)) {\r\n        return history.push('/play');\r\n      }\r\n      const access_token = getParamValues(location.hash);\r\n      const expiryTime = new Date().getTime() + access_token.expires_in * 1000;\r\n      localStorage.setItem('params', JSON.stringify(access_token));\r\n      localStorage.setItem('expiry_time', expiryTime);\r\n      setExpiryTime(expiryTime);\r\n      history.push('/play');\r\n    } catch (error) {\r\n      history.push('/play');\r\n    }\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ArtistGame from './ArtistGame'\r\nimport SongGame from './SongGame'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = () => ({\r\n  root: {\r\n    height: 'inherit'\r\n  },\r\n  button: {\r\n    backgroundColor: '#f03a47',\r\n    border: 'none',\r\n    height: '40px',\r\n    width: '150px',\r\n    borderRadius: '500px',\r\n    fontFamily: 'GothamMedium',\r\n    fontSize: '14px',\r\n    color: '#e8ebed',\r\n    transition: '.3s',\r\n    position: 'absolute',\r\n    bottom: '15px',\r\n    right: '10px',\r\n    \"&:hover\": {\r\n        backgroundColor: '#f46771'\r\n    },\r\n    \"&:focus\": {\r\n      backgroundColor: '#bf2e38'\r\n    },\r\n    \"&:nth-child(3)\":{\r\n      bottom: '60px'\r\n    },\r\n    \"&:nth-child(2)\":{\r\n      bottom: '105px'\r\n    }\r\n  },\r\n  section: {\r\n    backgroundColor: 'grey',\r\n    flex: '1 0 40%',\r\n    height: '65%',\r\n    margin: '5px',\r\n    marginTop: '180px',\r\n    marginRight: '40px',\r\n    marginLeft: '40px',\r\n    position: 'relative',\r\n    backgroundImage: 'linear-gradient(to top, #191414, rgba(255,0,0,0))',\r\n    borderRadius: '20px',\r\n    '@media only screen and (max-width:960px)': {\r\n      flex: '1 0 95%',\r\n      height: '50%',\r\n      marginTop: '0%',\r\n      marginRight: '0px',\r\n      marginLeft: '0px',\r\n      borderRadius: '0px',\r\n      margin: '0px'\r\n    }\r\n    \r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    height: 'calc(100% - 15px)',\r\n    padding: '4px 4px 0 4px',\r\n    flexWrap: 'wrap',\r\n    '@media only screen and (max-width:960px)': {\r\n      height: '100%',\r\n      padding: '0',\r\n    }\r\n  },\r\n  gameTitle: {\r\n    position: 'absolute',\r\n    bottom: '5px',\r\n    left: '15px',\r\n    color: '#e8ebed',\r\n    fontSize: '75px',\r\n    fontFamily: 'GothamBold',\r\n    '@media only screen and (max-width:960px)': {\r\n      fontSize: '55px',\r\n    }\r\n  },\r\n  artistgame: {\r\n    height: 'inherit'\r\n  }\r\n})\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        expiryTime: '0',\r\n        artistList: [],\r\n        songList: [],\r\n        gameStart: 'none',\r\n        topArtist: '',\r\n        topTrack: '',\r\n        gameType: ''\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n      let expiryTime;\r\n      const params = JSON.parse(localStorage.getItem('params'))\r\n      fetch(`https://api.spotify.com/v1/me/top/artists?time_range=long_term&limit=1&offset=0`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${params.access_token}`\r\n          },\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({topArtist: data.items[0].images[0].url}));\r\n\r\n        fetch(`https://api.spotify.com/v1/me/top/tracks?time_range=long_term&limit=1&offset=0`, {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `Bearer ${params.access_token}`\r\n            },\r\n          })\r\n          .then(response => response.json())\r\n          .then(data => this.setState({topTrack: data.items[0].album.images[0].url}));\r\n    \r\n  \r\n      try {\r\n        expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\r\n      } catch (error) {\r\n        expiryTime = '0';\r\n      }\r\n        this.setState({ expiryTime });\r\n      }\r\n      setExpiryTime = (expiryTime) => {\r\n      this.setState({ expiryTime });\r\n\r\n      \r\n    };\r\n    \r\n    isValidSession = () => {\r\n      const currentTime = new Date().getTime();\r\n      const expiryTime = this.state.expiryTime;\r\n      const isSessionValid = currentTime < expiryTime;\r\n      console.log(expiryTime)\r\n      console.log(currentTime)\r\n      return isSessionValid;\r\n    };\r\n\r\n    chooseGame = (type, length) => {\r\n      this.setState({gameStart: length})\r\n      this.setState({gameType: type})\r\n    }\r\n\r\n    resetGame = () => {\r\n      this.setState({gameStart: 'none'})\r\n    }\r\n\r\n    render() {\r\n      let {gameStart, topArtist, topTrack, gameType} = this.state\r\n      const { classes = {} } = this.props\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          {gameStart === 'none' ? \r\n            <div className={classes.container}>\r\n              <div className={classes.section} \r\n                style={{backgroundImage: `linear-gradient(to top, #191414, rgba(255,0,0,0) 75%), url('${topArtist}')`, backgroundSize: 'cover'}}>\r\n                <div className={classes.gameTitle}>Artists</div>\r\n                <button className={classes.button} onClick={() => this.chooseGame('artist', 'short_term')}>Last Four Weeks</button>\r\n                <button className={classes.button} onClick={() => this.chooseGame('artist', 'medium_term')}>Last Six Months</button>\r\n                <button className={classes.button} onClick={() => this.chooseGame('artist', 'long_term')}>All Time</button>\r\n              </div>\r\n              <div className={classes.section} \r\n                style={{backgroundImage: `linear-gradient(to top, #191414, rgba(255,0,0,0) 75%), url('${topTrack}')`, backgroundSize: 'cover'}}>\r\n                <div className={classes.gameTitle}>Songs</div>\r\n                <button className={classes.button} onClick={() => this.chooseGame('songs', 'short_term')}>Last Four Weeks</button>\r\n                <button className={classes.button} onClick={() => this.chooseGame('songs', 'medium_term')}>Last Six Months</button>\r\n                <button className={classes.button} onClick={() => this.chooseGame('songs', 'long_term')}>All Time</button>\r\n              </div>\r\n            </div>\r\n            \r\n            :\r\n            <div className={classes.artistgame}>\r\n              {\r\n                gameType === 'artist' ? \r\n                <ArtistGame gameType={gameStart} resetGame={this.resetGame}/> \r\n                :\r\n                <SongGame gameType={gameStart} resetGame={this.resetGame}></SongGame>\r\n              }\r\n              \r\n            </div>\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\nexport default withStyles(styles)(Dashboard)\r\n","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Home from './components/Home'\r\nimport Redirect from './components/Redirect'\r\nimport Dashboard from './components/Dashboard'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Router>\r\n        <Switch>\r\n          <Route path=\"/redirect\" component={Redirect} />\r\n          <Route path=\"/play\" component={Dashboard} />\r\n          <Route path=\"/\" component={Home}/>\r\n        </Switch>\r\n    </Router>\r\n    </div>\r\n  );}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}